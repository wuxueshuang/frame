第二章：数据类型：
	1.输入正确的QQ号码：
		知识点：数据类型的转换及判断：
		 1.txt.value==""  表示输入的内容为空；
		 2.txt.value.charAt(0)==" " ||txt.value.charAt(txt.value.length-1)==" "  第一位或者最后一位有空格；
		 3.Number(txt.value)!=txt.value   输入的内容中有些不是数字；
		 4.parseInt(txt.value)!=txt.value   输入了小数;
		 5.txt.value.charAt(0)==0   第一位输入了0;
	2.找数据：
		知识点：准确判断数据类型；
		步骤与方法：
			1.找到arr里所有的数字：Number(arr[i])===arr[i] //将数据用Number转后仍和自己相同，说明是数字；
			2.可以找到能转成数字的；parseFloat(arr[i]) //将小数也包含在内；
					!isNaN(parseFloat(arr[i]))   //  parseFloat(arr[i]))可以找到能转成数字的，但是parseFloat转空格转成的是NaN, isNaN排除空字符 
					******不是很明白
			3.arr[i]!=arr[i]   //找到可以NaN  利用NaN和自己不相等的特性；
	3.修改文本框的值；
		需求：
			1.点击编辑按钮，当前显示的块消失，编辑块显示；
			2.input框中的value值默认为选中状态;键盘直接输入value值自动改变，之前默认选中的之前的内容消失，即有一个默认选中的功能；element.select();
			3.点击确定按钮，编辑块消失，展示块的内容为刚刚编辑的内容，如果点击取消，编辑块同样消失，展示快的内容为之前展示的内容；
		小拓展：本题中只有两个展示块，可以分别给每一个展示的块，绑定点击事件，但是如果展示的内容多了，这样写就麻烦了，所以要用到，函数封装，即从不同的父级下获取相同类元素，然后传参，进而实现函数的复用;
	4.选项卡嵌套：
		功能：
			1.点击左边的li，右边对应的块显示，
			2.点击右边的小按钮，切换到对应的img上；
		步骤拆分：
			1.for循环左边的li,左边li的数量和右边展示块的数量相同，左边lis[i]选中，右边divs[i].style.display = "block";
				小细节，点击每一个li时，对应的div都展示的是第一张图片，所以默认给所有的div的第一张图片都显示；
			2.点击下方的小按钮，切换到对应得图片，声明一个变量，记录上一张显示的图片，点击时对应的显示，上一张隐藏；也可以暴力清空所有，让对应的隐藏；点击左边li的时候同理;
			3.封装函数；右边显示的内容，与左边点击的li的下标有关，li与div的下标一一对应;要切换的img和点击的小按钮，每次都从不同的父级获取，这个父级可以根据点击的	li的下标找到，因为在获取img和smallBtns时可以传入li的下标，用divs[i].来获取ing和smallBtns;
	5.商品筛选：
		需求：找到最贵的单价,共花费了多少,购买的额件数；
		难点：变量的声明位置：局部or全局；所有的li都要访问的放到全局，里面的li单独使用的放到局部；
		分析：
			1.函数封装：
			    这是一个商品列表，从每行的li里获取相应的元素，即用到函数传参，for循环所有的li，传入li的下标，根据下标从每个li里获取点击商品的+、- 按    钮，获得里面的单价，购买件数;
			2.记录购买商品的总件数.需要定义在全局：
				在全局定义变量来记录totalNum来记录购买商品的总件数，
			3.记录每件商品购买的总数量，定义在封装的函数里，即声明一个局部变量；
				在封装的函数里声明一个变量n，用来记录每行里购买的商品的件数，注意是每个商品购买的件数，
			    点击+，n++,总件数totalNum++;点击-，n--,总件数totalNum--;
			    购买单一种类的商品的花费 = 商品的单价 * 购买数量 n ;
			    总共花费 = 购买单一种类的商品的花费之和;
			4.最贵的商品单价；
				首先我们要明确一点，如果列表中的商品全部购买了我们很容易找出最贵的单价，即用for循环一个所有商品的单价，找出其中的最大值；
				所以我们要讨论的就是购买的商品中有n = 0的情况，即有一种或几种商品没有购买的情况，在外面声明一个变量maxPrice = 0，for循环所有的单价，判断条件为购买的数量不为0，在进行比较，依次类推，最终找到购买商品的最高单价；