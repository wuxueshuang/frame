第一章：热身运动；
	1.控制div大小；
		知识点：JS控制元素身上的属性；
		难点：了解并应用JS代码来控制元素的属性；熟记Js操作的位置，是行间，优先级要高于其他外链样式及内嵌css。
	2.模拟手机短信发送；
		知识点：状态控制；给变量赋值；字符串的拼接
			   eg:var val = text.value; //  text.value是取value值的，而不是存的text.value这个文本
		难点：头像的点击切换，根据输入框的value获取要发送的内容；字符串的拼接；
		思路：切换头像和发送消息的功能是独立的，先单独实现某一个功能在进行功能的整合；
	3.图片切换；
		知识点：开关-状态设置、过界问题，
		难点：切换有两种状态。一种是循环切换，一种是顺序切换；
	    思路：1.不管是哪种模式，先让图片动起来，在默认的情况下，让图片处于循环模式的状态。
	  		  2.根据点击上方的循环切换和顺序切换按钮，来判断是那种形式。
	  	方法：循环切换模式下，如果到最后一张，默认回到第一张，如果是第一张默认回到最后一张。
	  		  顺序切换模式下，如果是最后一张，提示“已经是最后一张了”，如果是第一张提示“已经是第一张”；
	  		  从而得出结论，不论是循环切换还是顺序切换我们只需要判断第一张和最后一张，循环切换第一张跳到最后一张，最后一张跳到第一张；
	  		  顺序切换，第一张和最后一张时都弹出提示，告示用户；	
	4. 4个V变化；
		知识点：控制元素的某个属性一次递增或递减；取模的应用；
		难点：根据V字的开口方向，来判断left值，right，bottom和top值是递增还是递减；根据点击按钮的次数来判断V字的开口方向；
		思路：先将按钮点击一次的效果实现，拆分功能；根据v开口方向，确定left值和top值；每点4次循环一周，可以根据取模来判断v的开口方向；
				即点击按钮的次数n%4;
		注意：作业讲解中第6个讲解，有一种新思路，每次点击只控制两个因素，递增和先递增在递减；跟据这个思路将每次点击组成V字形的5个小div的方向值按照一个属性递增，一个属性先递增后递减存到了二维数组里，即：
		var arr = [
				['left', 'bottom'], // 向上
				['top', 'right'], // 向左
				['left', 'top'], // 向下
				['top', 'left'], // 向右
			]

		每次点击时依次取出数组的的每一项来设置元素的值；
		    var n = 0;

			var direction = 0;


			btn.onclick = function (){
				direction = direction%4;
				box.innerHTML = '';
				for( var i = 0; i < 5; i++ ){//i一直递增，n先递增后递减；二维数组里的每一项中的第一个值用i来控制，第二个用n来控制；
					if( i > 2 ){
						n = 4-i;
					}else{
						n = i;
					}
					box.innerHTML += '<div style="'+arr[direction][0]+':'+i*50+'px;'+arr[direction][1]+':'+n*50+'px;">'+(i+1)+'</div>'
				}	

				direction++;
			};
	5.图片擦擦擦
		知识点：定位生成N个div;鼠标移入图像透明度变化，及3D放大效果的结合；
		难点：  定位生成的div，鼠标移入时，这个div范围内背景图片的位置是该位置div的left，top的负值；
		3D：    放大效果：Element.style.transform = 'scale(1.5)';//放大1.5倍；
		注意：  SEO优化：当鼠标移入第一次时,我们将这个div对应的小图片opacity:1;大小变为1.5倍,onmouseout的时候只改变大小,不改变透明度，所以在鼠标第二次移入的时候
				还会走opacity:1,这条代码，因此我们在外面设置一个状态，为false，默认为鼠标没有移入，进入if里走：opacity:0.5;当鼠标移入时设置为true，鼠标第二次
		        移入时就不会再走进opacity:1这段代码了。
	6.百度文库评分；
		知识点：移入，移出，点击图片状态的控制;
		难点：  小于2颗星星时鼠标移入点击都是粉色，多余两颗星星是移入点击都是红色，
		思路：  
				步骤分解:
				     鼠标移入: 给元素添加背景，判断移入元素的下标，如果<2，背景就变为粉色，如果>2,背景颜色就变为红色,
				     鼠标点击：给点击的元素以及点击元素前面的元素添加点击状态；不改变样式;
				     鼠标移出：清空样式;判断是否点击过，如果点击过的保留样式，没有点击过的样式清空;

		方法：  设置一个状态，记录是否被点击; 声明一个n:来记录点击星星的下标；
				onmouseover : 先清空之前的样式。然后根据移入星星的下标来判断星星的样式，
				onclick:      改变状态，记录下标；
				onmouseout:   暴力清空所有状态，如果星星被点击过，重新渲染被点击过星星的样式;
	7.QQ列表：
		知识点：自定义属性,记录点击上一次的下标;
		难点：  每次只展开一个列表;点击一次展开,再点击一次收缩
		思路分析：
				  拆分需求：
				  1.实现列表展开收缩功能;
				  	1).点击之前所有的列表都被收缩，点击h2对应的列表展开，可以设置一个标识prevClick，用来记录点击的h2的下标，第一次默认为0；
				  	2).给每一个h2也设置一个自定义属性，isShow,默认为false;点击一次设置为true，在点击设置为false；
				  	3).每次点击h2只要讨论是否和上次点击的下标相同，如果不相同在做下一步操做，上一次的隐藏，点击的这一次展开，同时将表示记录为这一次点击的下标;

				  2.实现鼠标移入li变色，移出不变色，点击过后移出不变色，移入也不变色；再次点击li时，如果点击的不是同一个li清空上一次的li背景色，
				  	1）.给所有的li分别绑定一个自定义属性，isClick，如果点击过，isClick为true，默认所有的li的isClick为false;移入移出时讨论这个li是否被点击过；
				  	2）.设置一个FlagiIndex,记录点击的li的下标，刚开始默认为0;点击li时清空上一次的li背景色，并将flagIndex记录为当前点击的li的下标；
	8.百度音乐全选：
		知识点：
		功能步骤分解：
			1.li隔行变色 是奇数行还是偶数行：利用%；
			2.给所有的li绑定事件，
				没有被点击过：
					鼠标移入时变色，
					移出恢复隔行变色，
				点击过背景变为黄色，
					移入、移出不变色;
			3. 全选按钮
					只要全选按钮勾选，所有的单选的input都要勾选 li的颜色变为yellow
					只要全选按钮不勾选，所有的单选的input都不勾选，回到隔行变色

			4. 单选按钮
					控制全选按钮是否被勾选
					只要有一个单选按钮不被勾选，全选按钮就不勾选

					单选按钮勾选了，是否所有的单选按钮都被勾选了
					即：for循环所有的input，如果一个input被勾选了，假设，全选按钮的checked为true，在循环所有的单选，如果有一个没有被钩选，那全选的checked为false，终止for循环;全选按钮就不被勾选，如果for循环结束之后，全选的checked仍是true，那么说明所欲的input都被勾选了，全选的状态也是勾选状态;

			Ps:现在我们可以利用事件委托来给所有的li绑定点击事件，点击每个li给里面的input添加checked，实现点击li勾选input框的效果;